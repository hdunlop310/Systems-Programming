{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 TrebuchetMS;\f1\fnil\fcharset0 TrebuchetMS-Bold;}
{\colortbl;\red255\green255\blue255;\red3\green41\blue82;\red255\green255\blue255;\red25\green28\blue31;
}
{\*\expandedcolortbl;;\cssrgb\c0\c21961\c39608;\cssrgb\c100000\c100000\c100000;\cssrgb\c12941\c14510\c16078;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl400\sa200\partightenfactor0

\f0\fs33\fsmilli16800 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Lab 4 Handout\
\pard\pardeftab720\sa240\partightenfactor0

\fs28\fsmilli14400 \cf4 \cb1 \strokec4 \
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf4 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Look at the provided code in\'a0
\f1\b general_tree.cpp
\f0\b0 \'a0and implement the two functions\'a0
\f1\b print
\f0\b0 \'a0and\'a0
\f1\b take_first_child
\f0\b0 . Think about how you express taking of ownership (or not taking ownership) in the types of these functions.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Try to run the\'a0
\f1\b clang Analyzer
\f0\b0 \'a0and the\'a0
\f1\b Address Sanitizer
\f0\b0 \'a0discussed in the lecturer today on your coursework code.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Look at the provided\'a0
\f1\b error.c
\f0\b0 \'a0and try to find the bug which occurs when we enter a non integer character. You might use the\'a0
\f1\b gdb
\f0\b0 \'a0or\'a0
\f1\b lldb
\f0\b0 \'a0debugger, set breakpoints and investigate the program state to understand the behaviour.\cb1 \
}